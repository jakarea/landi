<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\User;
use App\Models\CourseEnrollment;
use App\Models\Notification;
use App\Models\Course;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Str;

class LandingController extends Controller
{
    public function aiBootcamp()
    {
        $data = [
            'tools' => [
                'tools-01.svg', 'tools-02.svg', 'tools-03.svg',
                'tools-04.svg', 'tools-05.svg', 'tools-06.svg'
            ],

            'projects' => [
                ['project-01.webp', 'col-span-6 lg:col-span-4'],
                ['project-02.webp', 'col-span-6 lg:col-span-2'],
                ['project-03.webp', 'col-span-6 lg:col-span-2'],
                ['project-04.webp', 'col-span-6 lg:col-span-4'],
                ['project-05.webp', 'col-span-6 lg:col-span-3'],
                ['project-06.webp', 'col-span-6 lg:col-span-3'],
                ['project-07.webp', 'col-span-6 lg:col-span-3'],
                ['project-08.webp', 'col-span-6 lg:col-span-3']
            ],

            'clients' => [
                'clients/01.svg', 'clients/02.svg', 'clients/03.svg',
                'clients/04.svg', 'clients/05.svg', 'clients/06.svg',
                'clients/07.svg', 'clients/08.svg', 'clients/09.svg',
                'clients/10.svg', 'clients/11.svg', 'clients/grameenphone.svg',
                'clients/ifad.svg'
            ],

            'attendees' => [
                ['title' => 'ржбрж┐ржЬрж╛ржЗржирж╛рж░', 'glow_class' => 'attend-card-glow'],
                ['title' => 'ржХржиржЯрзЗржирзНржЯ ржХрзНрж░рж┐ржпрж╝рзЗржЯрж░', 'glow_class' => 'attend-card-glow-variant'],
                ['title' => 'ржПржЖржЗ рж╢рж┐ржЦрж╛рж░ ржЖржЧрзНрж░рж╣рзА', 'glow_class' => 'attend-card-glow'],
                ['title' => 'рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА', 'glow_class' => 'attend-card-glow-variant'],
                ['title' => 'ржмрж┐ржЬрзНржЮрж╛ржкржг ржирж┐рж░рзНржорж╛рждрж╛', 'glow_class' => 'attend-card-glow'],
                ['title' => 'ржорж╛рж░рзНржХрзЗржЯрж╛рж░', 'glow_class' => 'attend-card-glow-variant'],
                ['title' => 'ржнрж┐ржбрж┐ржУ ржПржбрж┐ржЯрж░', 'glow_class' => 'attend-card-glow'],
                ['title' => 'ржорж┐ржЙржЬрж┐рж╢рж┐ржпрж╝рж╛ржи', 'glow_class' => 'attend-card-glow-variant']
            ],

            'faqs' => [
                [
                    'question' => 'ржПржЗ ржХрзЛрж░рзНрж╕рзЗ ржпрзЛржЧ ржжрзЗржУржпрж╝рж╛рж░ ржЬржирзНржп ржХрж┐ ржХрзЛржирзЛ ржмрж┐рж╢рзЗрж╖ ржпрзЛржЧрзНржпрждрж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржЖржЫрзЗ?',
                    'answer' => 'ржирж╛, ржПржЗ ржХрзЛрж░рзНрж╕рзЗ ржпрзЛржЧ ржжрж┐рждрзЗ ржХрзЛржирзЛ ржмрж┐рж╢рзЗрж╖ ржпрзЛржЧрзНржпрждрж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред рж╢рзБржзрзБ ржПржХржЯрж┐ ржХржорзНржкрж┐ржЙржЯрж╛рж░/рж▓рзНржпрж╛ржкржЯржк ржПржмржВ ржЗржирзНржЯрж╛рж░ржирзЗржЯ рж╕ржВржпрзЛржЧ ржерж╛ржХрж▓рзЗржЗ ржЖржкржирж┐ ржПржЗ ржХрзЛрж░рзНрж╕рзЗ ржЕржВрж╢ржЧрзНрж░рж╣ржг ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред'
                ],
                [
                    'question' => 'ржХрзЛрж░рзНрж╕ ржХржоржкрзНрж▓рж┐ржЯ ржХрж░рж▓рзЗ ржХрж┐ рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ ржкрж╛ржмрзЛ?',
                    'answer' => 'рж╣рзНржпрж╛ржБ, ржХрзЛрж░рзНрж╕ рж╕ржлрж▓ржнрж╛ржмрзЗ рж╕ржорзНржкржирзНржи ржХрж░рж▓рзЗ ржЖржкржирж┐ ржПржХржЯрж┐ ржбрж┐ржЬрж┐ржЯрж╛рж▓ рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ ржкрж╛ржмрзЗржи ржпрж╛ ржЖржкржирж┐ ржЖржкржирж╛рж░ CV ржПржмржВ LinkedIn ржкрзНрж░рзЛржлрж╛ржЗрж▓рзЗ ржпрзЛржЧ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред'
                ],
                [
                    'question' => 'ржкрзЗржорзЗржирзНржЯ ржХрж░рж╛рж░ ржкрж░ ржХрж┐ рж░рж┐ржлрж╛ржирзНржб ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржмрзЗ?',
                    'answer' => 'ржХрзЛрж░рзНрж╕ рж╢рзБрж░рзБрж░ рзирзк ржШржирзНржЯрж╛ ржЖржЧрзЗ ржкрж░рзНржпржирзНржд рж░рж┐ржлрж╛ржирзНржбрзЗрж░ рж╕рзБржмрж┐ржзрж╛ рж░ржпрж╝рзЗржЫрзЗред рждржмрзЗ ржХрзЛрж░рзНрж╕ рж╢рзБрж░рзБ рж╣ржУржпрж╝рж╛рж░ ржкрж░ ржХрзЛржирзЛ рж░рж┐ржлрж╛ржирзНржб ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржмрзЗ ржирж╛ред'
                ],
                [
                    'question' => 'рж▓рж╛ржЗржн ржХрзНрж▓рж╛рж╕ ржорж┐рж╕ ржХрж░рж▓рзЗ ржХрж┐ рж░рзЗржХрж░рзНржбрж┐ржВ ржкрж╛ржмрзЛ?',
                    'answer' => 'рж╣рзНржпрж╛ржБ, рж╕ржХрж▓ рж▓рж╛ржЗржн рж╕рзЗрж╢ржирзЗрж░ рж░рзЗржХрж░рзНржбрж┐ржВ ржкрж╛ржмрзЗржи ржпрж╛ ржЖржкржирж┐ ржкрж░ржмрж░рзНрждрзАрждрзЗ ржжрзЗржЦрзЗ ржирж┐рждрзЗ ржкрж╛рж░ржмрзЗржиред рж░рзЗржХрж░рзНржбрж┐ржВ рзйрзж ржжрж┐ржи ржкрж░рзНржпржирзНржд ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред'
                ],
                [
                    'question' => 'ржХрзЛрж░рзНрж╕ рж╢рзЗрж╖рзЗ ржХрж┐ ржХрзЛржирзЛ рж╕рж╛ржкрзЛрж░рзНржЯ ржкрж╛ржмрзЛ?',
                    'answer' => 'рж╣рзНржпрж╛ржБ, ржХрзЛрж░рзНрж╕ рж╢рзЗрж╖ рж╣ржУржпрж╝рж╛рж░ ржкрж░ рззрзл ржжрж┐ржи ржкрж░рзНржпржирзНржд ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рж╛ржкрзЛрж░рзНржЯ ржПржмржВ Q&A ржПрж░ рж╕рзБржмрж┐ржзрж╛ ржкрж╛ржмрзЗржиред'
                ],
                [
                    'question' => 'ржПржЗ ржХрзЛрж░рзНрж╕рзЗрж░ AI ржЯрзБрж▓рж╕ ржХрж┐ ржлрзНрж░рж┐рждрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛ржмрзЗ?',
                    'answer' => 'ржХрзЛрж░рзНрж╕рзЗ ржЖржорж░рж╛ ржлрзНрж░рж┐ ржПржмржВ ржкрзЗржЗржб ржжрзБржЗ ржзрж░ржирзЗрж░ AI ржЯрзБрж▓рж╕ ржирж┐ржпрж╝рзЗ ржЖрж▓рзЛржЪржирж╛ ржХрж░ржмред ржлрзНрж░рж┐ ржЯрзБрж▓рж╕ ржжрж┐ржпрж╝рзЗржЗ рж╢рзБрж░рзБ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи ржПржмржВ ржкрж░ржмрж░рзНрждрзАрждрзЗ ржкрзНрж░ржпрж╝рзЛржЬржи ржЕржирзБржпрж╛ржпрж╝рзА ржкрзЗржЗржб ржЯрзБрж▓рж╕ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред'
                ]
            ]
        ];

        return view('landing.ai-bootcamp', $data);
    }

    public function enrollBootcamp(Request $request)
    {
        return $request->all();
        // Validate the request
        $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|email|max:255|unique:users,email',
            'phone' => 'required|string|max:20',
            'transaction_id' => 'nullable|string|max:100',
            'course_id' => 'required|integer',
            'instructor_id' => 'required|integer',
            'payment' => 'required|in:bkash,nogod,rocket,cash,free_access',
            'amount' => 'required|numeric|min:0',
        ], [
            'email.unique' => 'ржПржЗ ржЗржорзЗржЗрж▓ ржарж┐ржХрж╛ржирж╛ ржжрж┐ржпрж╝рзЗ ржЗрждрж┐ржоржзрзНржпрзЗ ржПржХржЯрж┐ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ рж░ржпрж╝рзЗржЫрзЗред',
            'name.required' => 'ржирж╛ржо ржЖржмрж╢рзНржпржХред',
            'email.required' => 'ржЗржорзЗржЗрж▓ ржарж┐ржХрж╛ржирж╛ ржЖржмрж╢рзНржпржХред',
            'email.email' => 'ржмрзИржз ржЗржорзЗржЗрж▓ ржарж┐ржХрж╛ржирж╛ ржкрзНрж░ржжрж╛ржи ржХрж░рзБржиред',
            'phone.required' => 'ржлрзЛржи ржиржорзНржмрж░ ржЖржмрж╢рзНржпржХред',
            'payment.required' => 'ржкрзЗржорзЗржирзНржЯ ржкржжрзНржзрждрж┐ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржиред',
            'amount.required' => 'ржХрзЛрж░рзНрж╕рзЗрж░ ржорзВрж▓рзНржп ржЖржмрж╢рзНржпржХред',
        ]);

        // Create new user account (email uniqueness already validated)
        $user = User::create([
            'name' => $request->name,
            'email' => $request->email,
            'phone' => $request->phone,
            'user_role' => 'student',
            'password' => Hash::make(Str::random(12)), // Temporary password
            'email_verified_at' => now(), // Auto-verify for bootcamp students
        ]);

        // Create course enrollment
        $enrollment = CourseEnrollment::create([
            'user_id' => $user->id,
            'course_id' => $request->course_id,
            'instructor_id' => $request->instructor_id,
            'status' => 'pending', // Will be approved after instructor review
            'paid' => false,
            'transaction_id' => $request->transaction_id,
            'payment_method' => $request->payment,
            'amount' => $request->amount,
            'original_amount' => $request->amount,
            'start_at' => now(),
        ]);

        // Create notification for instructor
        $course = Course::find($request->course_id);
        $courseName = $course ? $course->title : 'AI Bootcamp';

        Notification::create([
            'instructor_id' => $request->instructor_id,
            'course_id' => $request->course_id,
            'user_id' => $user->id,
            'type' => 'new_enrollment',
            'message' => "ЁЯЪи ржирждрзБржи ржПржирж░рзЛрж▓ржорзЗржирзНржЯ - ржкрзЗржорзЗржирзНржЯ ржпрж╛ржЪрж╛ржЗ ржкрзНрж░ржпрж╝рзЛржЬржи!\n\nрж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА: {$user->name} ({$user->email})\nржХрзЛрж░рзНрж╕: {$courseName}\nржкрзЗржорзЗржирзНржЯ: рз│" . number_format($request->amount) . "\nржкрзЗржорзЗржирзНржЯ ржорж╛ржзрзНржпржо: " . ucfirst($request->payment) . "\nржЯрзНрж░рж╛ржиржЬрзЗржХрж╢ржи ID: {$request->transaction_id}\n\nтЪая╕П Enrollment Management ржП ржЧрж┐ржпрж╝рзЗ ржкрзЗржорзЗржирзНржЯ ржпрж╛ржЪрж╛ржЗ ржХрж░рзЗ ржЕржирзБржорзЛржжржи/ржкрзНрж░рждрзНржпрж╛ржЦрзНржпрж╛ржи ржХрж░рзБржиред",
            'status' => 'unseen'
        ]);

        // Auto-login the user
        Auth::login($user);

        // Redirect to password setup page
        return redirect()->route('student.setup-password')->with('success', 'ржЖржкржирж╛рж░ AI Bootcamp ржПржирж░рзЛрж▓ржорзЗржирзНржЯ рж╕ржлрж▓ рж╣ржпрж╝рзЗржЫрзЗ! ржЖржкржирж╛рж░ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ ржПржмржВ ржкрзЗржорзЗржирзНржЯ ржнрзЗрж░рж┐ржлрж┐ржХрзЗрж╢ржирзЗрж░ ржЬржирзНржп ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░ржЫрзЗред ржжржпрж╝рж╛ ржХрж░рзЗ ржПржХржЯрж┐ ржирж┐рж░рж╛ржкржж ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб рж╕рзЗржЯ ржХрж░рзБржиред');
    }
}
